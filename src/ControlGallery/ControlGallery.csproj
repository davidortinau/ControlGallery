<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net6.0-ios;net6.0-android;net6.0-maccatalyst</TargetFrameworks>
    <!--<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows')) and '$(MSBuildRuntimeType)' == 'Full'">$(TargetFrameworks);net6.0-windows10.0.19041</TargetFrameworks>-->
    <OutputType>Exe</OutputType>
    <UseMaui>true</UseMaui>
    <EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
    <SingleProject>true</SingleProject>
    <ApplicationTitle>Control Gallery</ApplicationTitle>
    <ApplicationId>com.microsoft.MauiControlGallery</ApplicationId>
    <ApplicationVersion>1</ApplicationVersion>
  </PropertyGroup>
	
  <ItemGroup>
    <MauiImage Include="Resources\appicon.svg" ForegroundFile="Resources\appiconfg.svg" IsAppIcon="true" />
    <MauiSplashScreen Include="Resources\appiconfg.svg" Color="#512BD4" />
    <MauiImage Include="Resources\Images\*" />
    <MauiFont Include="Resources\Fonts\*.ttf" />
  </ItemGroup>
  

  <PropertyGroup>
		<InvariantGlobalization Condition="$(TargetFramework.Contains('-maccatalyst'))">true</InvariantGlobalization>
		<RuntimeIdentifier Condition="$(TargetFramework.Contains('-ios'))">iossimulator-x64</RuntimeIdentifier>
		<RuntimeIdentifier Condition="$(TargetFramework.Contains('-maccatalyst'))">maccatalyst-x64</RuntimeIdentifier>
		<UseInterpreter Condition="$(TargetFramework.Contains('-android'))">True</UseInterpreter>
	</PropertyGroup>

  	<ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
		<!-- Required - WinUI does not yet have buildTransitive for everything -->
		<PackageReference Include="Microsoft.WindowsAppSDK" Version="1.0.0-experimental1" />
		<PackageReference Include="Microsoft.WindowsAppSDK.Foundation" Version="1.0.0-experimental1" />
		<PackageReference Include="Microsoft.WindowsAppSDK.WinUI" Version="1.0.0-experimental1" />
		<PackageReference Include="Microsoft.WindowsAppSDK.InteractiveExperiences" Version="1.0.0-experimental1" NoWarn="NU1701" />
	</ItemGroup>

  	<ItemGroup>
  	  <Compile Update="Pages\LayoutsPage.xaml.cs">
  	    <DependentUpon>LayoutsPage.xaml</DependentUpon>
  	  </Compile>
  	  <Compile Update="Pages\ControlsPage.xaml.cs">
  	    <DependentUpon>ControlsPage.xaml</DependentUpon>
  	  </Compile>
  	  <Compile Update="Pages\ShadowPage.xaml.cs">
  	    <DependentUpon>ShadowPage.xaml</DependentUpon>
  	  </Compile>
  	</ItemGroup>

  	<ItemGroup>
  	  <MauiXaml Update="Pages\LayoutsPage.xaml">
  	    <SubType>Designer</SubType>
  	    <Generator>MSBuild:Compile</Generator>
  	  </MauiXaml>
  	  <MauiXaml Update="Pages\ControlsPage.xaml">
  	    <Generator>MSBuild:Compile</Generator>
  	  </MauiXaml>
  	  <MauiXaml Update="Pages\ShadowPage.xaml">
  	    <Generator>MSBuild:Compile</Generator>
  	  </MauiXaml>
  	</ItemGroup>

  	<ItemGroup>
  	  <Folder Include="Pages\Controls\" />
  	  <Folder Include="Pages\Layouts\" />
  	</ItemGroup>


	<PropertyGroup Condition="$(TargetFramework.Contains('-windows'))">
		<OutputType>WinExe</OutputType>
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
	</PropertyGroup>

	<PropertyGroup>
		<!-- Required - WinUI can't deploy in a multi-targeting environment -->
		<RuntimeIdentifier Condition="$(TargetFramework.Contains('-windows'))">win-x64</RuntimeIdentifier>
	</PropertyGroup>

    <!-- Temporarily disable runtimeconfig.json under .NET framework MSBuild -->
  <!-- <PropertyGroup Condition=" '$(MSBuildRuntimeType)' == 'Full' and ('$(TargetFramework)' == 'net6.0-android' or '$(TargetFramework)' == 'net6.0-ios' or '$(TargetFramework)' == 'net6.0-maccatalyst') ">
    <GenerateRuntimeConfigurationFiles>false</GenerateRuntimeConfigurationFiles>
  </PropertyGroup> -->
</Project>